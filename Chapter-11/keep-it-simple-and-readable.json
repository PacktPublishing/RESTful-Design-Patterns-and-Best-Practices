{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "https://magic-store.com/magic-item-structure-comparison.schema.json",
    "title": "Magic Item Schema",
    "type": "object",
    "oneOf": [
        {
            "$ref": "#/definitions/nested_structure"
        },
        {
            "$ref": "#/definitions/flattened_structure"
        }
    ],
    "properties": {
        "nested_structure": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "object",
                    "properties": {
                        "item": {
                            "type": "string"
                        },
                        "creator": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "first",
                        "last"
                    ]
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "weapon",
                        "armor",
                        "potion",
                        "scroll",
                        "wand",
                        "ring"
                    ]
                },
                "rarity": {
                    "type": "object",
                    "properties": {
                        "level": {
                            "type": "string",
                            "enum": [
                                "common",
                                "uncommon",
                                "rare",
                                "very rare",
                                "legendary"
                            ]
                        },
                        "attunement": {
                            "type": "boolean"
                        }
                    },
                    "required": [
                        "level",
                        "attunement"
                    ]
                },
                "description": {
                    "type": "string"
                }
            },
            "required": [
                "name",
                "type",
                "rarity",
                "description"
            ]
        },
        "flattened_structure": {
            "type": "object",
            "properties": {
                "itemName": {
                    "type": "string"
                },
                "creatorName": {
                    "type": "string"
                },
                "itemType": {
                    "type": "string",
                    "enum": [
                        "weapon",
                        "armor",
                        "potion",
                        "scroll",
                        "wand",
                        "ring"
                    ]
                },
                "rarityLevel": {
                    "type": "string",
                    "enum": [
                        "common",
                        "uncommon",
                        "rare",
                        "very rare",
                        "legendary"
                    ]
                },
                "requiresAttunement": {
                    "type": "boolean"
                },
                "itemDescription": {
                    "type": "string"
                }
            },
            "required": [
                "firstName",
                "lastName",
                "itemType",
                "rarityLevel",
                "requiresAttunement",
                "itemDescription"
            ]
        }
    },
    "_comment_structure_comparison": "This schema demonstrates two ways to structure the same data. The nested structure provides a logical hierarchy but can be more complex to navigate and query. The flattened structure is simpler and often easier to work with, especially for data storage and retrieval operations.",
    "_comment_recommendation": "For most use cases, the flattened structure is recommended as it provides a good balance between readability and simplicity. It's easier to validate, query, and manipulate in most programming contexts."
}